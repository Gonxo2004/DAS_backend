"""
Django settings for myFirstApiRest project.

Generated by 'django-admin startproject' using Django 5.1.7.
"""

import os
from pathlib import Path
from datetime import timedelta

import dj_database_url
from dotenv import load_dotenv

# ===================================
# BASE DIRECTORIES & ENV LOADING
# ===================================
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()  # Carga variables de entorno desde .env si existe

# ===================================
# SECURITY & DEBUG
# ===================================
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-gx$fal-...")  # Mejor nunca subir la real al repo
DEBUG = os.getenv("DEBUG", "True") == "True"

# ===================================
# ALLOWED HOSTS
# ===================================
ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "0.0.0.0",
    "das-backend-1-4y45.onrender.com",  # Tu dominio en Render
]

# ===================================
# INSTALLED APPS
# ===================================
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # TUS APPS:
    "auctions",
    "users",
    # LIBS:
    "rest_framework",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "drf_spectacular",
    "corsheaders",
]

# ===================================
# MIDDLEWARE
# ===================================
MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# ===================================
# URLS & WSGI
# ===================================
ROOT_URLCONF = "myFirstApiRest.urls"

WSGI_APPLICATION = "myFirstApiRest.wsgi.application"

# ===================================
# TEMPLATES
# ===================================
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ===================================
# DATABASES (SQLite local vs. Postgres en producción)
# ===================================
if DEBUG:
    # Para desarrollo local con SQLite
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    # Producción: usar DATABASE_URL (PostgreSQL) de Render
    DATABASES = {
        "default": dj_database_url.config(
            default=os.getenv("DATABASE_URL")
        )
    }

# ===================================
# AUTH & PASSWORD VALIDATORS
# ===================================
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "users.CustomUser"

# ===================================
# INTERNATIONALIZATION
# ===================================
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Europe/Madrid"
USE_I18N = True
USE_TZ = True

# ===================================
# STATIC & MEDIA
# ===================================
STATIC_URL = "static/"
# Para producción en Render:
# STATIC_ROOT = BASE_DIR / "staticfiles"

# ===================================
# DRF & JWT & SCHEMAS
# ===================================
REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 12,
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
}

SPECTACULAR_SETTINGS = {
    "TITLE": "API Auctions",
    "DESCRIPTION": "Auctions web",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

# ===================================
# CORS
# ===================================
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# ===================================
# DEFAULT PRIMARY KEY
# ===================================
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
